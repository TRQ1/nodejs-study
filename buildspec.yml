version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 8     
    commands:
      - echo Installing source NPM dependencies...
      - npm install 
  pre_build:
    commands:
      - echo Fetching ECR Login
      - ECR_LOGIN=`aws ecr get-login  --region $AWS_DEFAULT_REGION --no-include-email`
      - echo Logging in to Amazon ECR...
      - $ECR_LOGIN
      - IMAGE_TAG=`echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7`
      - echo Downloading Clair client Klar-2.1.1
      - wget https://github.com/optiopay/klar/releases/download/v2.1.1/klar-2.1.1-linux-amd64
      - mv ./klar-2.1.1-linux-amd64 ./klar
      - chmod +x ./klar
      - PASSWORD=`echo $ECR_LOGIN | cut -d' ' -f6`
      - ECR_REGISTRY=`echo $ECR_LOGIN | cut -d' ' -f7 | sed "s/https:\/\///"`
  build:
    commands:
      - echo Build started on `data`
      - echo Building the Docker images
      - echo $ECR_REPOSITORY_URI
      - docker build -t $ECR_REPOSITORY_URI:latest .
      - docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"Website","imageUri":"%s"}]' $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
